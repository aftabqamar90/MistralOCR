<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>@ViewData["Title"] - MistralOCR</title>
    <script type="importmap"></script>
    <link rel="stylesheet" href="~/lib/bootstrap/dist/css/bootstrap.min.css" />
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.11.3/font/bootstrap-icons.min.css">
    <link href="https://fonts.googleapis.com/css2?family=Poppins:wght@300;400;500;600;700&display=swap" rel="stylesheet">
    <link rel="stylesheet" href="~/css/site.css" asp-append-version="true" />
    <link rel="stylesheet" href="~/MistralOCR.styles.css" asp-append-version="true" />
    <style>
        body {
            font-family: 'Poppins', sans-serif;
        }
    </style>
</head>
<body>
    <!-- Loading Overlay -->
    <div id="loadingOverlay" class="loading-overlay">
        <div class="d-flex flex-column align-items-center">
            <div class="spinner"></div>
            <div class="loading-text">Loading...</div>
        </div>
    </div>

    <header>
        <nav class="navbar navbar-expand-sm navbar-toggleable-sm navbar-dark navbar-gradient border-bottom box-shadow mb-4">
            <div class="container-fluid">
                <a class="navbar-brand" asp-area="" asp-controller="Home" asp-action="Index">
                    <i class="bi bi-file-earmark-text me-2"></i> MistralOCR
                </a>
                <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target=".navbar-collapse" aria-controls="navbarSupportedContent"
                        aria-expanded="false" aria-label="Toggle navigation">
                    <span class="navbar-toggler-icon"></span>
                </button>
                <div class="navbar-collapse collapse d-sm-inline-flex justify-content-between">
                    <ul class="navbar-nav flex-grow-1">
                        <li class="nav-item">
                            <a class="nav-link text-white" asp-area="" asp-controller="Home" asp-action="Index">
                                <i class="bi bi-house-fill me-1"></i> Home
                            </a>
                        </li>
                        <li class="nav-item">
                            <a class="nav-link text-white" asp-area="" asp-controller="Home" asp-action="Privacy">
                                <i class="bi bi-shield-lock me-1"></i> Privacy
                            </a>
                        </li>
                    </ul>
                    <partial name="_LoginPartial" />
                </div>
            </div>
        </nav>
    </header>
    <div class="container-fluid">
        <main role="main" class="pb-3">
            @RenderBody()
        </main>
    </div>

    <footer class="footer text-white mt-5">
        <div class="container-fluid">
            <div class="d-flex justify-content-between align-items-center">
                <div>
                    &copy; @DateTime.Now.Year - MistralOCR
                </div>
                <div>
                    <a asp-area="" asp-controller="Home" asp-action="Privacy" class="text-white">
                        <i class="bi bi-shield-lock me-1"></i> Privacy
                    </a>
                </div>
            </div>
        </div>
    </footer>
    
    <!-- Toast container for notifications -->
    <div class="toast-container position-fixed bottom-0 end-0 p-3"></div>
    
    <script src="~/lib/jquery/dist/jquery.min.js"></script>
    <script src="~/lib/bootstrap/dist/js/bootstrap.bundle.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/axios/dist/axios.min.js"></script>
    <script src="~/js/site.js" asp-append-version="true"></script>
    @await RenderSectionAsync("Scripts", required: false)
    
    <script>
        // Show loading overlay on page navigation
        document.addEventListener('DOMContentLoaded', function() {
            // Hide loading when page is fully loaded
            hideLoading();
            
            // Show loading on form submissions (except for forms with data-no-loading attribute)
            document.querySelectorAll('form:not([data-no-loading])').forEach(form => {
                form.addEventListener('submit', function(e) {
                    // Don't show loading for AJAX form submissions
                    if (this.getAttribute('data-ajax') === 'true') {
                        return;
                    }
                    showLoading();
                });
            });
            
            // Show loading on link clicks (except for links with data-no-loading attribute)
            document.querySelectorAll('a:not([data-no-loading])').forEach(link => {
                if (link.getAttribute('href') && 
                    !link.getAttribute('href').startsWith('#') && 
                    !link.getAttribute('href').startsWith('javascript:') &&
                    !link.getAttribute('target')) {
                    link.addEventListener('click', function() {
                        showLoading();
                    });
                }
            });
            
            // Handle programmatic navigation
            const originalPushState = history.pushState;
            history.pushState = function() {
                hideLoading(); // Hide loading before navigation
                return originalPushState.apply(this, arguments);
            };
            
            const originalReplaceState = history.replaceState;
            history.replaceState = function() {
                hideLoading(); // Hide loading before navigation
                return originalReplaceState.apply(this, arguments);
            };
            
            // Handle browser back/forward navigation
            window.addEventListener('popstate', function() {
                hideLoading();
            });
            
            // Handle page unload
            window.addEventListener('beforeunload', function() {
                // Only show loading if it's not an AJAX request
                if (!window.isAjaxRequest) {
                    showLoading();
                }
            });
            
            // Set up axios interceptors to handle AJAX requests
            if (window.axios) {
                // Flag to track AJAX requests
                window.isAjaxRequest = false;
                
                axios.interceptors.request.use(function(config) {
                    window.isAjaxRequest = true;
                    return config;
                }, function(error) {
                    window.isAjaxRequest = false;
                    return Promise.reject(error);
                });
                
                axios.interceptors.response.use(function(response) {
                    window.isAjaxRequest = false;
                    return response;
                }, function(error) {
                    window.isAjaxRequest = false;
                    return Promise.reject(error);
                });
            }
        });
        
        function showLoading() {
            document.getElementById('loadingOverlay').classList.add('show');
        }
        
        function hideLoading() {
            document.getElementById('loadingOverlay').classList.remove('show');
        }
        
        // Expose loading functions globally
        window.showLoading = showLoading;
        window.hideLoading = hideLoading;
    </script>
</body>
</html>
